<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Monday, March 14, 2016, 10:06 PM -->
<!-- MuClient version 5.01 -->

<!-- Plugin "Hiballl_Enchanting" generated by Plugin Wizard -->

<muclient>
<plugin
   name="Hiballl_Enchanting"
   author="Hiballl"
   id="690504a914f203f791da543d"
   language="Lua"
   purpose="Plugin to help enchanting in Aardwolf"
   save_state="y"
   date_written="2016-03-14 22:02:06"
   requires="5.01"
   version="1.1"
   >

</plugin>


<!--  Get our standard constants -->

<include name="constants.lua"/>

<!--  Triggers  -->

<triggers>
  <trigger
   enabled="y"
   group="Enchanting"
   match="^Your enchanters focus fades.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("efSpellActive","off")
SetVariable("efSpellCoolDown","on")</send>
  </trigger>
  <trigger
   enabled="y"
   group="Enchanting"
   match="^Your enchanting skills feel more focused.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("efSpellActive","on")
SetVariable("efSpellCoolDown","off")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Enchanting"
   match="^Strength(\s+)([\d-]+)(\s+)([\d-]+)(\s+)([\d-]+)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local vRawStats = GetVariable("enchantRawCompare")

if vRawStats == 'true' then
        SetVariable ("enchantRawStrStatAmount","%2")
else
        SetVariable ("enchantStrStatAmount","%2")
end





</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Enchanting"
   match="^Totals(\s+)([\d-]+)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local vRawEnchant = GetVariable("enchantRawCompare")

if vRawEnchant == 'false' then
        Execute("enchantStatReport")
elseif vRawEnchant == 'true' then
        SetVariable("enchantRawCompare","false")
        Send("cast 'solidify' " ..GetVariable("currentSRItarget"))
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="Enchanting"
   match="^Unsatisfied with your focus, you darken*"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Send("cast 'illuminate' " ..GetVariable("currentSRItarget"))</send>
  </trigger>
  <trigger
   enabled="y"
   group="Enchanting"
   match="^Unsatisfied with your focus, you return invisibility*"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Send("cast 'solidify' " ..GetVariable("currentSRItarget"))</send>
  </trigger>
  <trigger
   enabled="y"
   group="Enchanting"
   match="^Unsatisfied with your focus, you silence*"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Send("cast 'resonate' " ..GetVariable("currentSRItarget"))</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Enchanting"
   match="^Wisdom(\s+)(\d+)(\s+)(\d+)(\s+)(\d+)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local vRawStats = GetVariable("enchantRawCompare")

if vRawStats == 'true' then
        SetVariable ("enchantRawWisStatAmount","%2")
else
        SetVariable ("enchantWisStatAmount","%2")
end



</send>
  </trigger>
  <trigger
   enabled="y"
   group="Enchanting"
   match="^You are still recovering your Augmentation abilities.*"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("efSpellActive","off")
SetVariable("efSpellCoolDown","on")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Enchanting"
   match="^                                -------$"
   omit_from_output="y"
   regexp="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   group="Enchanting"
   match="^## You may now use augmentation abilities.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("efSpellActive","off")
SetVariable("efSpellCoolDown","off")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Enchanting"
   match="^----------------- ------ ------ -------$"
   omit_from_output="y"
   regexp="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Enchanting"
   match="^.+ begins to hum softly.$"
   regexp="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Enchanting"
   lines_to_match="2"
   match="^.+ begins to hum softly.\sMagic pulses through .+, blessing it with fortune.\Z"
   multi_line="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable ("resLuckHit","1")
Send("cast 'illuminate' " ..GetVariable("currentSRItarget"))</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Enchanting"
   match="^.+ is already glowing.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable ("illHit","2")
Send("compare " ..GetVariable("currentSRItarget").. " detail")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Enchanting"
   match="^.+ is already humming gently.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable ("resHit","2")
Send("cast 'illuminate' " ..GetVariable("currentSRItarget"))</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Enchanting"
   match="^.+ is not invisible.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable ("solHit","2")
Send("cast 'resonate' " ..GetVariable("currentSRItarget"))</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Enchanting"
   match="^.+ starts to glow brightly as you infuse it with holy magic.$"
   regexp="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Enchanting"
   lines_to_match="2"
   match="^.+ starts to glow brightly as you infuse it with holy magic.\sMagic pulses through .+, enhancing its power.\Z"
   multi_line="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable ("illLuckHit","1")
Send("compare " ..GetVariable("currentSRItarget").. " detail")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Enchanting"
   match="^Affect Bonus      Amount Points   Score  $"
   omit_from_output="y"
   regexp="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Enchanting"
   match="^Constitution(\s+)([\d-]+)(\s+)([\d-]+)(\s+)([\d-]+)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local vRawStats = GetVariable("enchantRawCompare")

if vRawStats == 'true' then
        SetVariable ("enchantRawConStatAmount","%2")
else
        SetVariable ("enchantConStatAmount","%2")
end


</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Enchanting"
   match="^Damage roll(\s+)([\d-]+)(\s+)([\d-]+)(\s+)([\d-]+)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local vRawStats = GetVariable("enchantRawCompare")

if vRawStats == 'true' then
        SetVariable ("enchantRawDamRollStatAmount","%2")
else
        SetVariable ("enchantDamRollStatAmount","%2")
end

</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Enchanting"
   match="^Dexterity(\s+)([\d-]+)(\s+)([\d-]+)(\s+)([\d-]+)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local vRawStats = GetVariable("enchantRawCompare")

if vRawStats == 'true' then
        SetVariable ("enchantRawDexStatAmount","%2")
else
        SetVariable ("enchantDexStatAmount","%2")
end



</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Enchanting"
   match="^Hit points(\s+)([\d-]+)(\s+)([\d-]+)(\s+)([\d-]+)$"
   omit_from_output="y"
   regexp="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Enchanting"
   match="^Hit roll(\s+)([\d-]+)(\s+)([\d-]+)(\s+)([\d-]+)$"
   omit_from_output="y"
   regexp="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Enchanting"
   match="^Intelligence(\s+)([\d-]+)(\s+)([\d-]+)(\s+)([\d-]+)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local vRawStats = GetVariable("enchantRawCompare")

if vRawStats == 'true' then
        SetVariable ("enchantRawIntStatAmount","%2")
else
        SetVariable ("enchantIntStatAmount","%2")
end


</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Enchanting"
   match="^Luck(\s+)([\d-]+)(\s+)([\d-]+)(\s+)([\d-]+)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local vRawStats = GetVariable("enchantRawCompare")

if vRawStats == 'true' then
        SetVariable ("enchantRawLuckStatAmount","%2")
else
        SetVariable ("enchantLuckStatAmount","%2")
end


</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Enchanting"
   match="^You solidify .+ making it visible again.$"
   regexp="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Enchanting"
   lines_to_match="2"
   match="^You solidify .+ making it visible again.\sMagic pulses through .+, enhancing its power.\Z"
   multi_line="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable ("solLuckHit","1")
Send("cast 'resonate' " ..GetVariable("currentSRItarget"))</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Enchanting"
   match="^Mana(\s+)([\d-]+)(\s+)([\d-]+)(\s+)([\d-]+)$"
   omit_from_output="y"
   regexp="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Enchanting"
   match="^Moves(\s+)([\d-]+)(\s+)([\d-]+)(\s+)([\d-]+)$"
   omit_from_output="y"
   regexp="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Enchanting"
   match="^Resists(\s+)(\d+)(\s+)(\d+)(\s+)(\d+)$"
   omit_from_output="y"
   regexp="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   group="Enchanting"
   match="^Showing points for: (?P&lt;ItemName&gt;.*)"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable ("enchantItemName","%&lt;ItemName&gt;")</send>
  </trigger>
</triggers>

<!--  Aliases  -->

<aliases>
  <alias
   match="^setEnchantResult( .*){0,1}$"
   enabled="y"
   group="Enchanting"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local NewBag = Trim("%1")
if NewBag == 'drop' or NewBag == 'sell' or NewBag == 'hold' then

    SetVariable ("enchantDHS",NewBag)
    Note ("Enchant Result now set to: " ..NewBag)
else
    Note ("Needs to be set to drop,sell or hold!")
end
</send>
  </alias>
  <alias
   match="^setDamRollRequired( .*){0,1}$"
   enabled="y"
   group="Enchanting"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local NewBag = Trim("%1")
SetVariable ("enchantDRRequired",NewBag)
Note ("Minimum DR now set to: " ..NewBag)</send>
  </alias>
  <alias
   match="^enchantStatReport$"
   enabled="y"
   expand_variables="y"
   group="Enchanting"
   regexp="y"
   send_to="12"
   omit_from_output="y"
   sequence="100"
  >
  <send>local enchantStrStat = GetVariable("enchantStrStatAmount")
local enchantIntStat = GetVariable("enchantIntStatAmount")
local enchantWisStat = GetVariable("enchantWisStatAmount")
local enchantDexStat = GetVariable("enchantDexStatAmount")
local enchantConStat = GetVariable("enchantConStatAmount")
local enchantLuckStat = GetVariable("enchantLuckStatAmount")
local enchantDamRollStat = GetVariable("enchantDamRollStatAmount")
local rawStrStat = GetVariable("enchantRawStrStatAmount")
local rawIntStat = GetVariable("enchantRawIntStatAmount")
local rawWisStat = GetVariable("enchantRawWisStatAmount")
local rawDexStat = GetVariable("enchantRawDexStatAmount")
local rawConStat = GetVariable("enchantRawConStatAmount")
local rawLuckStat = GetVariable("enchantRawLuckStatAmount")
local rawDamRollStat = GetVariable("enchantRawDamRollStatAmount")
local totalStr = (enchantStrStat - rawStrStat)
local totalInt = (enchantIntStat - rawIntStat)
local totalWis = (enchantWisStat - rawWisStat)
local totalDex = (enchantDexStat - rawDexStat)
local totalCon = (enchantConStat - rawConStat)
local totalLuck = (enchantLuckStat - rawLuckStat)
local totalDR = (enchantDamRollStat - rawDamRollStat)
local totalStats = (totalStr + totalInt + totalWis + totalDex + totalCon + totalLuck)

Note("Total DR: " ..totalDR)
Note("Total Stats: " ..totalStats)

if totalDR == tonumber(GetVariable("enchantDRRequired")) and totalStats &gt;= tonumber(GetVariable("enchantStatRequired")) then
       Send("put " ..GetVariable("currentSRItarget").. " " ..GetVariable("EnchantedBag"))
else
       if GetVariable("enchantDHS") == 'drop' then
              Send("drop " ..GetVariable("currentSRItarget"))
       elseif  GetVariable("enchantDHS") == 'hold' then
              
       elseif  GetVariable("enchantDHS") == 'sell' then
              Send("sell " ..GetVariable("currentSRItarget"))
       end
end

</send>
  </alias>
  <alias
   match="^setEnchantedBag( .*){0,1}$"
   enabled="y"
   group="Enchanting"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local NewBag = Trim("%1")
SetVariable ("EnchantedBag",NewBag)
Note ("EnchantedBag now set to: " ..NewBag)</send>
  </alias>
  <alias
   match="^setStatsRequired( .*){0,1}$"
   enabled="y"
   group="Enchanting"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local NewBag = Trim("%1")
SetVariable ("enchantStatRequired",NewBag)
Note ("Minimum Stats now set to: " ..NewBag)</send>
  </alias>
  <alias
   match="^setunEnchantedBag( .*){0,1}$"
   enabled="y"
   group="Enchanting"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local NewBag = Trim("%1")
SetVariable ("unEnchantedBag",NewBag)
Note ("unEnchantedBag now set to: " ..NewBag)</send>
  </alias>
  <alias
   match="^resetEnchantVariables$"
   enabled="y"
   group="Enchanting"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable ("enchantItemName","None")
SetVariable ("enchantRawCompare","false")
SetVariable ("enchantConStatAmount","0")
SetVariable ("enchantDamRollStatAmount","0")
SetVariable ("enchantDexStatAmount","0")
SetVariable ("enchantIntStatAmount","0")
SetVariable ("enchantLuckStatAmount","0")
SetVariable ("enchantStrStatAmount","0")
SetVariable ("enchantWisStatAmount","0")
SetVariable ("enchantRawConStatAmount","0")
SetVariable ("enchantRawDamRollStatAmount","0")
SetVariable ("enchantRawDexStatAmount","0")
SetVariable ("enchantRawIntStatAmount","0")
SetVariable ("enchantRawLuckStatAmount","0")
SetVariable ("enchantRawStrStatAmount","0")
SetVariable ("enchantRawWisStatAmount","0")
SetVariable ("illHit","0")
SetVariable ("illLuckHit","0")
SetVariable ("resHit","0")
SetVariable ("resLuckHit","0")
SetVariable ("solHit","0")
SetVariable ("solLuckHit","0")
Note("Enchanting variables reset!")</send>
  </alias>
  <alias
   match="^enchant( .*){0,1}$"
   enabled="y"
   expand_variables="y"
   group="Enchanting"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local vItem = Trim("%1")

if vItem == '-help' then
      Note("***********************************************")
      Note("**********Hiballl's Enchanting Plugin**********")
      Note("Commands:")
      Note("enchant &lt;itemname&gt;")
      Note("- Will enchant item.")
      Note("enchant -help")
      Note("- Will show this help file.")
      Note("enchant -info")
      Note("- Will show current variables.")
      Note("resetEnchantVariables")
      Note("- Cleanup data holding variables.")
      Note("setDamRollRequired &lt;number&gt;")
      Note("- Allows you to set minimum Dam Roll.")
      Note("setEnchantedBag &lt;itemname&gt;")
      Note("- Sets which bag good enchants will go into.")
      Note("setEnchantResult &lt;option&gt;")
      Note("- What to do with enchant fails. Drop/Hold/Sell")
      Note("setStatsRequired &lt;number&gt;")
      Note("- Allows you to set minimum Stats.")
      Note("setunEnchantedBag &lt;itemname&gt;")
      Note("- Sets which bag hold the unenchanted items.")
      Note("***********************************************")
elseif vItem == '-info' then
      Note("***********************************************")
      Note("**********Hiballl's Enchanting Plugin**********")
      Note("Variables:")
      Note("EnchantResult: " ..GetVariable("enchantDHS"))
      Note("Enchant DR: " ..GetVariable("enchantDRRequired"))
      Note("Enchant Stat: " ..GetVariable("enchantStatRequired"))
      Note("Enchanted Bag: " ..GetVariable("EnchantedBag"))
      Note("UnEnchanted Bag: " ..GetVariable("unEnchantedBag"))
      Note("***********************************************")
else
      local vEFActive = GetVariable("efSpellActive")
      local vEFCoolDown = GetVariable("efSpellCoolDown")


      if vEFActive == 'on' then
            SetVariable("currentSRItarget", vItem)
            Send("take " ..vItem.. " " ..GetVariable("unEnchantedBag"))
            SetVariable("enchantRawCompare", "true")
            Send("compare " ..vItem.. " detail")
      else
            if vEFCoolDown == 'on' then
                 Note ("Enchanters Focus on Cooldown!!!!")
            else
                 Send("cast 'enchanters focus'")
            end
      end
end</send>
  </alias>
</aliases>

<!--  Variables  -->

<variables>
  <variable name="enchantDexStatAmount">0</variable>
  <variable name="enchantIntStatAmount">0</variable>
  <variable name="enchantRawLuckStatAmount">0</variable>
  <variable name="enchantDamRollStatAmount">10</variable>
  <variable name="enchantRawCompare">false</variable>
  <variable name="resHit">0</variable>
  <variable name="currentSRItarget">91hook</variable>
  <variable name="enchantRawStrStatAmount">6</variable>
  <variable name="enchantWisStatAmount">1</variable>
  <variable name="resLuckHit">1</variable>
  <variable name="enchantStatRequired">7</variable>
  <variable name="enchantRawConStatAmount">0</variable>
  <variable name="enchantDHS">sell</variable>
  <variable name="unEnchantedBag">1631509962</variable>
  <variable name="enchantRawDexStatAmount">0</variable>
  <variable name="enchantLuckStatAmount">2</variable>
  <variable name="enchantRawIntStatAmount">0</variable>
  <variable name="enchantStrStatAmount">7</variable>
  <variable name="EnchantedBag">102391655</variable>
  <variable name="efSpellActive">on</variable>
  <variable name="illLuckHit">1</variable>
  <variable name="enchantItemName">Sharkbait's Infectious Clap</variable>
  <variable name="efSpellCoolDown">off</variable>
  <variable name="enchantRawWisStatAmount">0</variable>
  <variable name="enchantRawDamRollStatAmount">10</variable>
  <variable name="solLuckHit">1</variable>
  <variable name="enchantDRRequired">6</variable>
  <variable name="enchantConStatAmount">1</variable>
  <variable name="illHit">0</variable>
  <variable name="solHit">0</variable>
</variables>

</muclient>
